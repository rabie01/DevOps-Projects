pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
        TF_VAR_war_s3_bucket = 'mybuckett21000'
        TF_VAR_war_s3_key    = 'artifacts/dptweb-1.0.war'
    }

    stages {
        stage('Clone Repo') {
            steps {
                git 'https://github.com/rabie01/DevOps-Projects.git'
            }
        }

        stage('Build WAR') {
            steps {
                dir('DevOps Project-01/Java-Login-App') {
                    sh '''
                        export DB_HOST=localhost
                        mvn clean package
                    '''
                }
            }
        }

        stage('Upload WAR to S3') {
            steps {
                dir('DevOps Project-01') {
                    sh 'aws s3 cp Java-Login-App/target/dptweb-1.0.war s3://${TF_VAR_war_s3_bucket}/${TF_VAR_war_s3_key}'
                }
            }
        }

        /*
        stage('Upload WAR to S3') {
            steps {
                withCredentials([
                    string(credentialsId: 'aws-access-key-id', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'aws-secret-access-key', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    dir('DevOps Project-01') {
                        sh '''
                            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                            aws s3 cp Java-Login-App/target/dptweb-1.0.war s3://${TF_VAR_war_s3_bucket}/${TF_VAR_war_s3_key}
                        '''
                    }
                }
            }
        }
        */

        stage('Terraform Init') {
            steps {
                dir('DevOps Project-01/terraform') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('DevOps Project-01/terraform') {
                    sh 'terraform plan'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('DevOps Project-01/terraform') {
                    sh 'terraform apply -auto-approve'
                }
            }
        }
 
    }
    post {
        always {
            cleanWs()
        }
    }
}
